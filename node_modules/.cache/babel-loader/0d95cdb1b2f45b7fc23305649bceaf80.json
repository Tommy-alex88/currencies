{"ast":null,"code":"import _slicedToArray from\"/home/alexander/dev/react-game/Tommy-alex88.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useRef,useState}from\"react\";import Card from\"../UI/Card/Card\";import classes from\"./Exchange.module.css\";// Component takes string of given format for currencies pair, fetches to api\n// and returns result of conversion\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExchangeComponent=function ExchangeComponent(){var errorText=\"Enter valid Pair of Currencies (example: 1.3 USD to RUB)\";var input=useRef();var _useState=useState(),_useState2=_slicedToArray(_useState,2),result=_useState2[0],setResult=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isValid=_useState6[0],setIsValid=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isFocused=_useState8[0],setIsFocused=_useState8[1];// focus and blur handlers are for input error-state styling\nvar inputFocusHandler=function inputFocusHandler(event){setIsFocused(true);};var inputBlurHandler=function inputBlurHandler(event){setIsFocused(false);};// entered value validation based on RegEx pattern\nvar inputChangeHandler=function inputChangeHandler(event){var value=event.target.value;var isMatch=value.match(/(\\d*\\.?,?\\d*\\s[A-Z]{3}\\sto\\s[A-Z]{3}(?!.))/gi);if(isMatch){setIsValid(true);setError(null);}else{setIsValid(false);setResult(null);}};// fetching to api and getting the conversion result as response\nvar submitHandler=function submitHandler(e){e.preventDefault();setError(null);if(isValid){var text=input.current.value.toString();var resultAmount=text.match(/(\\d*\\.?,?\\d*)/);var amount=resultAmount[0].replace(/,/g,\".\");amount<=0&&setError(errorText);var resultCur=text.match(/([A-Z]{3})/gi);var fromCur=resultCur[0];var toCur=resultCur[1];var url=\"https://api.exchangerate.host/convert?from=\".concat(fromCur,\"&to=\").concat(toCur,\"&amount=\").concat(amount);fetch(url).then(function(res){if(!res.ok){throw new Error(\"Response error\");}return res.json();}).then(function(data){data.result?setResult(data.result):setError(errorText);return;}).catch(function(err){return setError(err.message);});}else{setError(errorText);}};return/*#__PURE__*/_jsx(\"section\",{className:\"\".concat(classes.exchange,\" \").concat((error||!isValid)&&isFocused&&classes.invalid),children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"curr\",children:\"Enter currencies pair\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"curr\",placeholder:\"example: 1.2 USD to EUR\",ref:input,onChange:inputChangeHandler,onFocus:inputFocusHandler,onBlur:inputBlurHandler}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Get Result\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.result,children:[\"Result:\",error&&/*#__PURE__*/_jsx(\"p\",{className:classes.error,children:error}),result&&!error&&/*#__PURE__*/_jsx(\"p\",{children:result})]})]})});};export default ExchangeComponent;","map":{"version":3,"sources":["/home/alexander/dev/react-game/Tommy-alex88.github.io/src/components/Exchange/Exchange.js"],"names":["useRef","useState","Card","classes","ExchangeComponent","errorText","input","result","setResult","error","setError","isValid","setIsValid","isFocused","setIsFocused","inputFocusHandler","event","inputBlurHandler","inputChangeHandler","value","target","isMatch","match","submitHandler","e","preventDefault","text","current","toString","resultAmount","amount","replace","resultCur","fromCur","toCur","url","fetch","then","res","ok","Error","json","data","catch","err","message","exchange","invalid"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Exchange.module.css\";\n\n// Component takes string of given format for currencies pair, fetches to api\n// and returns result of conversion\nconst ExchangeComponent = () => {\n  const errorText = \"Enter valid Pair of Currencies (example: 1.3 USD to RUB)\";\n  const input = useRef();\n  const [result, setResult] = useState();\n  const [error, setError] = useState(\"\");\n  const [isValid, setIsValid] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n\n  // focus and blur handlers are for input error-state styling\n  const inputFocusHandler = (event) => {\n    setIsFocused(true);\n  };\n\n  const inputBlurHandler = (event) => {\n    setIsFocused(false);\n  };\n\n  // entered value validation based on RegEx pattern\n  const inputChangeHandler = (event) => {\n    const value = event.target.value;\n    const isMatch = value.match(/(\\d*\\.?,?\\d*\\s[A-Z]{3}\\sto\\s[A-Z]{3}(?!.))/gi);\n    if (isMatch) {\n      setIsValid(true);\n      setError(null);\n    } else {\n      setIsValid(false);\n      setResult(null);\n    }\n  };\n\n  // fetching to api and getting the conversion result as response\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setError(null);\n    if (isValid) {\n      let text = input.current.value.toString();\n      const resultAmount = text.match(/(\\d*\\.?,?\\d*)/);\n      const amount = resultAmount[0].replace(/,/g, \".\");\n      amount <= 0 && setError(errorText);\n      const resultCur = text.match(/([A-Z]{3})/gi);\n      const fromCur = resultCur[0];\n      const toCur = resultCur[1];\n\n      const url = `https://api.exchangerate.host/convert?from=${fromCur}&to=${toCur}&amount=${amount}`;\n\n      fetch(url)\n        .then((res) => {\n          if (!res.ok) {\n            throw new Error(\"Response error\");\n          }\n          return res.json();\n        })\n        .then((data) => {\n          data.result ? setResult(data.result) : setError(errorText);\n          return;\n        })\n        .catch((err) => setError(err.message));\n    } else {\n      setError(errorText);\n    }\n  };\n\n  return (\n    <section\n      className={`${classes.exchange} ${\n        (error || !isValid) && isFocused && classes.invalid\n      }`}\n    >\n      <Card>\n        <form onSubmit={submitHandler}>\n          <label htmlFor=\"curr\">Enter currencies pair</label>\n          <input\n            type=\"text\"\n            id=\"curr\"\n            placeholder=\"example: 1.2 USD to EUR\"\n            ref={input}\n            onChange={inputChangeHandler}\n            onFocus={inputFocusHandler}\n            onBlur={inputBlurHandler}\n          />\n          <button type=\"submit\">Get Result</button>\n        </form>\n        <div className={classes.result}>\n          Result:\n          {error && <p className={classes.error}>{error}</p>}\n          {result && !error && <p>{result}</p>}\n        </div>\n      </Card>\n    </section>\n  );\n};\n\nexport default ExchangeComponent;\n"]},"metadata":{},"sourceType":"module"}