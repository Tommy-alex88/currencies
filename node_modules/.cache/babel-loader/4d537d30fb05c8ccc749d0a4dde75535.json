{"ast":null,"code":"var _jsxFileName = \"/home/alexander/dev/react-game/Tommy-alex88.github.io/src/components/Currencies/Currencies.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../UI/Card/Card\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport { currenciesActions } from \"../../store\";\nimport classes from \"./Currencies.module.css\"; // gives a list of currency exchange rates (from store)\n// and opportunity to change base currency\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Currencies = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const currencies = useSelector(state => state.currencies);\n  const baseCurrency = useSelector(state => state.baseCurrency);\n  const loading = useSelector(state => state.loading); //change base currency in the redux store. List is fetched again in App.js,\n  // where baseCurrency is set as dependancy in useEffect/useCallback\n\n  const baseChangeHandler = event => {\n    dispatch(currenciesActions.changeBaseCurrency(event.target.value));\n  }; // rendered list of currencies with adding gray-color styling for even rows\n\n\n  let listItem = null;\n  let i = 0;\n  const curList = currencies.map(el => {\n    if (i % 2 === 0) {\n      listItem = /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.even,\n        children: `${el.name} = ${el.value} ${baseCurrency}`\n      }, el.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    } else {\n      listItem = /*#__PURE__*/_jsxDEV(\"li\", {\n        children: `${el.name} = ${el.value} ${baseCurrency}`\n      }, el.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n    }\n\n    i++;\n    return listItem;\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.info,\n        children: \"Exhange rates for different currency pairs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.base,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select base currency: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          size: \"1\",\n          value: baseCurrency,\n          onChange: baseChangeHandler,\n          children: currencies.map(el => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: el.name,\n            children: el.name\n          }, el.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.rates,\n        children: [loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 23\n        }, this), !loading && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: curList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Currencies, \"HHSbiJxu2Lo/Nvi6em94kbKyRKg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Currencies;\nexport default Currencies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Currencies\");","map":{"version":3,"sources":["/home/alexander/dev/react-game/Tommy-alex88.github.io/src/components/Currencies/Currencies.js"],"names":["useSelector","useDispatch","Card","Spinner","currenciesActions","classes","Currencies","dispatch","currencies","state","baseCurrency","loading","baseChangeHandler","event","changeBaseCurrency","target","value","listItem","i","curList","map","el","even","name","container","info","base","rates"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\n\nimport Card from \"../UI/Card/Card\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport { currenciesActions } from \"../../store\";\nimport classes from \"./Currencies.module.css\";\n\n// gives a list of currency exchange rates (from store)\n// and opportunity to change base currency\nconst Currencies = () => {\n  const dispatch = useDispatch();\n  const currencies = useSelector((state) => state.currencies);\n  const baseCurrency = useSelector((state) => state.baseCurrency);\n  const loading = useSelector((state) => state.loading);\n\n  //change base currency in the redux store. List is fetched again in App.js,\n  // where baseCurrency is set as dependancy in useEffect/useCallback\n  const baseChangeHandler = (event) => {\n    dispatch(currenciesActions.changeBaseCurrency(event.target.value));\n  };\n  // rendered list of currencies with adding gray-color styling for even rows\n  let listItem = null;\n  let i = 0;\n  const curList = currencies.map((el) => {\n    if (i % 2 === 0) {\n      listItem = (\n        <li\n          className={classes.even}\n          key={el.name}\n        >{`${el.name} = ${el.value} ${baseCurrency}`}</li>\n      );\n    } else {\n      listItem = (\n        <li key={el.name}>{`${el.name} = ${el.value} ${baseCurrency}`}</li>\n      );\n    }\n    i++;\n    return listItem;\n  });\n\n  return (\n    <section className={classes.container}>\n      <Card>\n        <div className={classes.info}>\n          Exhange rates for different currency pairs\n        </div>\n        <div className={classes.base}>\n          <p>Select base currency: </p>\n          <select size=\"1\" value={baseCurrency} onChange={baseChangeHandler}>\n            {currencies.map((el) => (\n              <option key={el.name} value={el.name}>\n                {el.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className={classes.rates}>\n          {loading && <Spinner />}\n          {!loading && <ul>{curList}</ul>}\n        </div>\n      </Card>\n    </section>\n  );\n};\nexport default Currencies;\n"]},"metadata":{},"sourceType":"module"}