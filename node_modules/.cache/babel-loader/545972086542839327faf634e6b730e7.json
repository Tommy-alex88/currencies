{"ast":null,"code":"var _jsxFileName = \"/home/alexander/dev/react-game/Tommy-alex88.github.io/src/components/Exchange/Exchange.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Exchange.module.css\"; // Component takes string of given format for currencies pair, fetches to api\n// and returns result of conversion\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExchangeComponent = () => {\n  _s();\n\n  const errorText = \"Enter valid Pair of Currencies (example: 1.3 USD to RUB)\";\n  const input = useRef();\n  const [result, setResult] = useState();\n  const [error, setError] = useState(\"\");\n  const [isValid, setIsValid] = useState(false);\n  const [isFocused, setIsFocused] = useState(false); // focus and blur handlers are for input error-state styling\n\n  const inputFocusHandler = event => {\n    setIsFocused(true);\n  };\n\n  const inputBlurHandler = event => {\n    setIsFocused(false);\n  }; // entered value validation based on RegEx pattern\n\n\n  const inputChangeHandler = event => {\n    const value = event.target.value;\n    const isMatch = value.match(/(\\d*\\.?,?\\d*\\s[A-Z]{3}\\sto\\s[A-Z]{3}(?!.))/gi);\n\n    if (isMatch) {\n      setIsValid(true);\n      setError(null);\n    } else {\n      setIsValid(false);\n      setResult(null);\n    }\n  }; // fetching to api and getting the conversion result as response\n\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setError(null);\n\n    if (isValid) {\n      let text = input.current.value.toString();\n      const resultAmount = text.match(/(\\d*\\.?,?\\d*)/);\n      const amount = resultAmount[0].replace(/,/g, \".\");\n      amount <= 0 && setError(errorText);\n      const resultCur = text.match(/([A-Z]{3})/gi);\n      const fromCur = resultCur[0];\n      const toCur = resultCur[1];\n      const url = `https://api.exchangerate.host/convert?from=${fromCur}&to=${toCur}&amount=${amount}`;\n      fetch(url).then(res => {\n        if (!res.ok) {\n          throw new Error(\"Response error\");\n        }\n\n        return res.json();\n      }).then(data => {\n        data.result ? setResult(data.result) : setError(errorText);\n        return;\n      }).catch(err => setError(err.message));\n    } else {\n      setError(errorText);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `${classes.exchange} ${(error || !isValid) && isFocused && classes.invalid}`,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"curr\",\n          children: \"Enter currencies pair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"curr\",\n          placeholder: \"example: 1.2 USD to EUR\",\n          ref: input,\n          onChange: inputChangeHandler,\n          onFocus: inputFocusHandler,\n          onBlur: inputBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Get Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.result,\n        children: [\"Result:\", error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), result && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExchangeComponent, \"L4Z7ZQTcgxYKMpN5xLMMTgI1SC8=\");\n\n_c = ExchangeComponent;\nexport default ExchangeComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExchangeComponent\");","map":{"version":3,"sources":["/home/alexander/dev/react-game/Tommy-alex88.github.io/src/components/Exchange/Exchange.js"],"names":["useRef","useState","Card","classes","ExchangeComponent","errorText","input","result","setResult","error","setError","isValid","setIsValid","isFocused","setIsFocused","inputFocusHandler","event","inputBlurHandler","inputChangeHandler","value","target","isMatch","match","submitHandler","e","preventDefault","text","current","toString","resultAmount","amount","replace","resultCur","fromCur","toCur","url","fetch","then","res","ok","Error","json","data","catch","err","message","exchange","invalid"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Exchange.module.css\";\n\n// Component takes string of given format for currencies pair, fetches to api\n// and returns result of conversion\nconst ExchangeComponent = () => {\n  const errorText = \"Enter valid Pair of Currencies (example: 1.3 USD to RUB)\";\n  const input = useRef();\n  const [result, setResult] = useState();\n  const [error, setError] = useState(\"\");\n  const [isValid, setIsValid] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n\n  // focus and blur handlers are for input error-state styling\n  const inputFocusHandler = (event) => {\n    setIsFocused(true);\n  };\n\n  const inputBlurHandler = (event) => {\n    setIsFocused(false);\n  };\n\n  // entered value validation based on RegEx pattern\n  const inputChangeHandler = (event) => {\n    const value = event.target.value;\n    const isMatch = value.match(/(\\d*\\.?,?\\d*\\s[A-Z]{3}\\sto\\s[A-Z]{3}(?!.))/gi);\n    if (isMatch) {\n      setIsValid(true);\n      setError(null);\n    } else {\n      setIsValid(false);\n      setResult(null);\n    }\n  };\n\n  // fetching to api and getting the conversion result as response\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setError(null);\n    if (isValid) {\n      let text = input.current.value.toString();\n      const resultAmount = text.match(/(\\d*\\.?,?\\d*)/);\n      const amount = resultAmount[0].replace(/,/g, \".\");\n      amount <= 0 && setError(errorText);\n      const resultCur = text.match(/([A-Z]{3})/gi);\n      const fromCur = resultCur[0];\n      const toCur = resultCur[1];\n\n      const url = `https://api.exchangerate.host/convert?from=${fromCur}&to=${toCur}&amount=${amount}`;\n\n      fetch(url)\n        .then((res) => {\n          if (!res.ok) {\n            throw new Error(\"Response error\");\n          }\n          return res.json();\n        })\n        .then((data) => {\n          data.result ? setResult(data.result) : setError(errorText);\n          return;\n        })\n        .catch((err) => setError(err.message));\n    } else {\n      setError(errorText);\n    }\n  };\n\n  return (\n    <section\n      className={`${classes.exchange} ${\n        (error || !isValid) && isFocused && classes.invalid\n      }`}\n    >\n      <Card>\n        <form onSubmit={submitHandler}>\n          <label htmlFor=\"curr\">Enter currencies pair</label>\n          <input\n            type=\"text\"\n            id=\"curr\"\n            placeholder=\"example: 1.2 USD to EUR\"\n            ref={input}\n            onChange={inputChangeHandler}\n            onFocus={inputFocusHandler}\n            onBlur={inputBlurHandler}\n          />\n          <button type=\"submit\">Get Result</button>\n        </form>\n        <div className={classes.result}>\n          Result:\n          {error && <p className={classes.error}>{error}</p>}\n          {result && !error && <p>{result}</p>}\n        </div>\n      </Card>\n    </section>\n  );\n};\n\nexport default ExchangeComponent;\n"]},"metadata":{},"sourceType":"module"}