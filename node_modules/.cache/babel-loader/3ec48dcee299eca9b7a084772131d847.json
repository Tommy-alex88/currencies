{"ast":null,"code":"import{useSelector,useDispatch}from\"react-redux\";import Card from\"../UI/Card/Card\";import Spinner from\"../UI/Spinner/Spinner\";import{currenciesActions}from\"../../store\";import classes from\"./Currencies.module.css\";// gives a list of currency exchange rates (from store)\n// and opportunity to change base currency\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Currencies=function Currencies(){var dispatch=useDispatch();var currencies=useSelector(function(state){return state.currencies;});var baseCurrency=useSelector(function(state){return state.baseCurrency;});var loading=useSelector(function(state){return state.loading;});//change base currency in the redux store. List is fetched again in App.js,\n// where baseCurrency is set as dependancy in useEffect/useCallback\nvar baseChangeHandler=function baseChangeHandler(event){dispatch(currenciesActions.changeBaseCurrency(event.target.value));};// rendered list of currencies with adding gray-color styling for even rows\nvar listItem=null;var i=0;var curList=currencies.map(function(el){if(i%2===0){listItem=/*#__PURE__*/_jsx(\"li\",{className:classes.even,children:\"\".concat(el.name,\" = \").concat(el.value,\" \").concat(baseCurrency)},el.name);}else{listItem=/*#__PURE__*/_jsx(\"li\",{children:\"\".concat(el.name,\" = \").concat(el.value,\" \").concat(baseCurrency)},el.name);}i++;return listItem;});return/*#__PURE__*/_jsx(\"section\",{className:classes.container,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"div\",{className:classes.info,children:\"Exhange rates for different currency pairs\"}),/*#__PURE__*/_jsxs(\"div\",{className:classes.base,children:[/*#__PURE__*/_jsx(\"p\",{children:\"Select base currency: \"}),/*#__PURE__*/_jsx(\"select\",{size:\"1\",value:baseCurrency,onChange:baseChangeHandler,children:currencies.map(function(el){return/*#__PURE__*/_jsx(\"option\",{value:el.name,children:el.name},el.name);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.rates,children:[loading&&/*#__PURE__*/_jsx(Spinner,{}),!loading&&/*#__PURE__*/_jsx(\"ul\",{children:curList})]})]})});};export default Currencies;","map":{"version":3,"sources":["/home/alexander/dev/react-game/Tommy-alex88.github.io/src/components/Currencies/Currencies.js"],"names":["useSelector","useDispatch","Card","Spinner","currenciesActions","classes","Currencies","dispatch","currencies","state","baseCurrency","loading","baseChangeHandler","event","changeBaseCurrency","target","value","listItem","i","curList","map","el","even","name","container","info","base","rates"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,MAAOC,CAAAA,IAAP,KAAiB,iBAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAASC,iBAAT,KAAkC,aAAlC,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,CAEA;AACA;wFACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CACA,GAAMO,CAAAA,UAAU,CAAGR,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACD,UAAjB,EAAD,CAA9B,CACA,GAAME,CAAAA,YAAY,CAAGV,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACC,YAAjB,EAAD,CAAhC,CACA,GAAMC,CAAAA,OAAO,CAAGX,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACE,OAAjB,EAAD,CAA3B,CAEA;AACA;AACA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CACnCN,QAAQ,CAACH,iBAAiB,CAACU,kBAAlB,CAAqCD,KAAK,CAACE,MAAN,CAAaC,KAAlD,CAAD,CAAR,CACD,CAFD,CAGA;AACA,GAAIC,CAAAA,QAAQ,CAAG,IAAf,CACA,GAAIC,CAAAA,CAAC,CAAG,CAAR,CACA,GAAMC,CAAAA,OAAO,CAAGX,UAAU,CAACY,GAAX,CAAe,SAACC,EAAD,CAAQ,CACrC,GAAIH,CAAC,CAAG,CAAJ,GAAU,CAAd,CAAiB,CACfD,QAAQ,cACN,WACE,SAAS,CAAEZ,OAAO,CAACiB,IADrB,oBAGKD,EAAE,CAACE,IAHR,eAGkBF,EAAE,CAACL,KAHrB,aAG8BN,YAH9B,GAEOW,EAAE,CAACE,IAFV,CADF,CAMD,CAPD,IAOO,CACLN,QAAQ,cACN,8BAAsBI,EAAE,CAACE,IAAzB,eAAmCF,EAAE,CAACL,KAAtC,aAA+CN,YAA/C,GAASW,EAAE,CAACE,IAAZ,CADF,CAGD,CACDL,CAAC,GACD,MAAOD,CAAAA,QAAP,CACD,CAfe,CAAhB,CAiBA,mBACE,gBAAS,SAAS,CAAEZ,OAAO,CAACmB,SAA5B,uBACE,MAAC,IAAD,yBACE,YAAK,SAAS,CAAEnB,OAAO,CAACoB,IAAxB,wDADF,cAIE,aAAK,SAAS,CAAEpB,OAAO,CAACqB,IAAxB,wBACE,6CADF,cAEE,eAAQ,IAAI,CAAC,GAAb,CAAiB,KAAK,CAAEhB,YAAxB,CAAsC,QAAQ,CAAEE,iBAAhD,UACGJ,UAAU,CAACY,GAAX,CAAe,SAACC,EAAD,qBACd,eAAsB,KAAK,CAAEA,EAAE,CAACE,IAAhC,UACGF,EAAE,CAACE,IADN,EAAaF,EAAE,CAACE,IAAhB,CADc,EAAf,CADH,EAFF,GAJF,cAcE,aAAK,SAAS,CAAElB,OAAO,CAACsB,KAAxB,WACGhB,OAAO,eAAI,KAAC,OAAD,IADd,CAEG,CAACA,OAAD,eAAY,oBAAKQ,OAAL,EAFf,GAdF,GADF,EADF,CAuBD,CAtDD,CAuDA,cAAeb,CAAAA,UAAf","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\n\nimport Card from \"../UI/Card/Card\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport { currenciesActions } from \"../../store\";\nimport classes from \"./Currencies.module.css\";\n\n// gives a list of currency exchange rates (from store)\n// and opportunity to change base currency\nconst Currencies = () => {\n  const dispatch = useDispatch();\n  const currencies = useSelector((state) => state.currencies);\n  const baseCurrency = useSelector((state) => state.baseCurrency);\n  const loading = useSelector((state) => state.loading);\n\n  //change base currency in the redux store. List is fetched again in App.js,\n  // where baseCurrency is set as dependancy in useEffect/useCallback\n  const baseChangeHandler = (event) => {\n    dispatch(currenciesActions.changeBaseCurrency(event.target.value));\n  };\n  // rendered list of currencies with adding gray-color styling for even rows\n  let listItem = null;\n  let i = 0;\n  const curList = currencies.map((el) => {\n    if (i % 2 === 0) {\n      listItem = (\n        <li\n          className={classes.even}\n          key={el.name}\n        >{`${el.name} = ${el.value} ${baseCurrency}`}</li>\n      );\n    } else {\n      listItem = (\n        <li key={el.name}>{`${el.name} = ${el.value} ${baseCurrency}`}</li>\n      );\n    }\n    i++;\n    return listItem;\n  });\n\n  return (\n    <section className={classes.container}>\n      <Card>\n        <div className={classes.info}>\n          Exhange rates for different currency pairs\n        </div>\n        <div className={classes.base}>\n          <p>Select base currency: </p>\n          <select size=\"1\" value={baseCurrency} onChange={baseChangeHandler}>\n            {currencies.map((el) => (\n              <option key={el.name} value={el.name}>\n                {el.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className={classes.rates}>\n          {loading && <Spinner />}\n          {!loading && <ul>{curList}</ul>}\n        </div>\n      </Card>\n    </section>\n  );\n};\nexport default Currencies;\n"]},"metadata":{},"sourceType":"module"}